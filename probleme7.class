/*Ce TP est réalisé par :

Ould Moussa Mohamed Bouasira

Ait Ali Sara

Problème 7 : Correspondance d’avions*/
import ilog.concert.*;
import ilog.cplex.*;
public class Probleme7 {

	public static void main(String[] args) {
		model_pb7();
	}
	public static void model_pb7() {
		try {
			IloCplex cplex = new IloCplex();
			
			// Les variables de décision
			IloNumVar x11 = cplex.boolVar();
			IloNumVar x12 = cplex.boolVar();
			IloNumVar x13 = cplex.boolVar();
			IloNumVar x14 = cplex.boolVar();
			IloNumVar x15 = cplex.boolVar();
			IloNumVar x16 = cplex.boolVar();
			IloNumVar x21 = cplex.boolVar();
			IloNumVar x22 = cplex.boolVar();
			IloNumVar x23 = cplex.boolVar();
			IloNumVar x24 = cplex.boolVar();
			IloNumVar x25 = cplex.boolVar();
			IloNumVar x26 = cplex.boolVar();
			IloNumVar x31 = cplex.boolVar();
			IloNumVar x32 = cplex.boolVar();
			IloNumVar x33 = cplex.boolVar();
			IloNumVar x34 = cplex.boolVar();
			IloNumVar x35 = cplex.boolVar();
			IloNumVar x36 = cplex.boolVar();
			IloNumVar x41 = cplex.boolVar();
			IloNumVar x42 = cplex.boolVar();
			IloNumVar x43 = cplex.boolVar();
			IloNumVar x44 = cplex.boolVar();
			IloNumVar x45 = cplex.boolVar();
			IloNumVar x46 = cplex.boolVar();
			IloNumVar x51 = cplex.boolVar();
			IloNumVar x52 = cplex.boolVar();
			IloNumVar x53 = cplex.boolVar();
			IloNumVar x54 = cplex.boolVar();
			IloNumVar x55 = cplex.boolVar();
			IloNumVar x56 = cplex.boolVar();
			IloNumVar x61 = cplex.boolVar();
			IloNumVar x62 = cplex.boolVar();
			IloNumVar x63 = cplex.boolVar();
			IloNumVar x64 = cplex.boolVar();
			IloNumVar x65 = cplex.boolVar();
			IloNumVar x66 = cplex.boolVar();
			
			
			// L'expression de la fonction objective
			IloLinearNumExpr objective = cplex.linearNumExpr();
			objective.addTerm(35, x11);
			objective.addTerm(12, x12);
			objective.addTerm(16, x13);
			objective.addTerm(38, x14);
			objective.addTerm(5, x15);
			objective.addTerm(2, x16);
			objective.addTerm(25, x21);
			objective.addTerm(8, x22);
			objective.addTerm(9, x23);
			objective.addTerm(24, x24);
			objective.addTerm(6, x25);
			objective.addTerm(8, x26);
			objective.addTerm(12, x31);
			objective.addTerm(8, x32);
			objective.addTerm(11, x33);
			objective.addTerm(27, x34);
			objective.addTerm(3, x35);
			objective.addTerm(2, x36);
			objective.addTerm(38, x41);
			objective.addTerm(15, x42);
			objective.addTerm(14, x43);
			objective.addTerm(30, x44);
			objective.addTerm(2, x45);
			objective.addTerm(9, x46);
			objective.addTerm(0, x51);
			objective.addTerm(9, x52);
			objective.addTerm(8, x53);
			objective.addTerm(25, x54);
			objective.addTerm(10, x55);
			objective.addTerm(5, x56);
			objective.addTerm(0, x61);
			objective.addTerm(0, x62);
			objective.addTerm(0, x63);
			objective.addTerm(14, x64);
			objective.addTerm(6, x65);
			objective.addTerm(7, x66);
			
			// l'objectif 
			cplex.addMinimize(objective);
			
			// définition des contraintes
			cplex.addEq(cplex.sum(cplex.prod(1,x11),cplex.prod(1,x12),cplex.prod(1,x13),cplex.prod(1,x14),cplex.prod(1,x15),cplex.prod(1,x16)), 1);
			cplex.addEq(cplex.sum(cplex.prod(1,x21),cplex.prod(1,x22),cplex.prod(1,x23),cplex.prod(1,x24),cplex.prod(1,x25),cplex.prod(1,x26)), 1);
			cplex.addEq(cplex.sum(cplex.prod(1,x31),cplex.prod(1,x32),cplex.prod(1,x33),cplex.prod(1,x34),cplex.prod(1,x35),cplex.prod(1,x36)), 1);
			cplex.addEq(cplex.sum(cplex.prod(1,x41),cplex.prod(1,x42),cplex.prod(1,x43),cplex.prod(1,x44),cplex.prod(1,x45),cplex.prod(1,x46)), 1);
			cplex.addEq(cplex.sum(cplex.prod(1,x51),cplex.prod(1,x52),cplex.prod(1,x53),cplex.prod(1,x54),cplex.prod(1,x55),cplex.prod(1,x56)), 1);
			cplex.addEq(cplex.sum(cplex.prod(1,x61),cplex.prod(1,x62),cplex.prod(1,x63),cplex.prod(1,x64),cplex.prod(1,x65),cplex.prod(1,x66)), 1);
			
			cplex.addEq(cplex.sum(cplex.prod(1,x11),cplex.prod(1,x21),cplex.prod(1,x31),cplex.prod(1,x41),cplex.prod(1,x51),cplex.prod(1,x61)), 1);
			cplex.addEq(cplex.sum(cplex.prod(1,x12),cplex.prod(1,x22),cplex.prod(1,x32),cplex.prod(1,x42),cplex.prod(1,x52),cplex.prod(1,x62)), 1);
			cplex.addEq(cplex.sum(cplex.prod(1,x13),cplex.prod(1,x23),cplex.prod(1,x33),cplex.prod(1,x43),cplex.prod(1,x53),cplex.prod(1,x63)), 1);
			cplex.addEq(cplex.sum(cplex.prod(1,x14),cplex.prod(1,x24),cplex.prod(1,x34),cplex.prod(1,x44),cplex.prod(1,x54),cplex.prod(1,x64)), 1);
			cplex.addEq(cplex.sum(cplex.prod(1,x15),cplex.prod(1,x25),cplex.prod(1,x35),cplex.prod(1,x45),cplex.prod(1,x55),cplex.prod(1,x65)), 1);
			cplex.addEq(cplex.sum(cplex.prod(1,x16),cplex.prod(1,x26),cplex.prod(1,x36),cplex.prod(1,x46),cplex.prod(1,x56),cplex.prod(1,x66)), 1);
			// l'affichage des résultats
			if(cplex.solve()) {
				System.out.println("Obj ="+ cplex.getObjValue());
				System.out.println("x11 ="+ cplex.getValue(x11));
				System.out.println("x12 ="+ cplex.getValue(x12));
				System.out.println("x13 ="+ cplex.getValue(x13));
				System.out.println("x14 ="+ cplex.getValue(x14));
				System.out.println("x15 ="+ cplex.getValue(x15));
				System.out.println("x16 ="+ cplex.getValue(x16));
				System.out.println("x21 ="+ cplex.getValue(x21));
				System.out.println("x22 ="+ cplex.getValue(x22));
				System.out.println("x23 ="+ cplex.getValue(x23));
				System.out.println("x24 ="+ cplex.getValue(x24));
				System.out.println("x25 ="+ cplex.getValue(x25));
				System.out.println("x26 ="+ cplex.getValue(x26));
				System.out.println("x31 ="+ cplex.getValue(x31));
				System.out.println("x32 ="+ cplex.getValue(x32));
				System.out.println("x33 ="+ cplex.getValue(x33));
				System.out.println("x34 ="+ cplex.getValue(x34));
				System.out.println("x35 ="+ cplex.getValue(x35));
				System.out.println("x36 ="+ cplex.getValue(x36));
				System.out.println("x41 ="+ cplex.getValue(x41));
				System.out.println("x42 ="+ cplex.getValue(x42));
				System.out.println("x43 ="+ cplex.getValue(x43));
				System.out.println("x44 ="+ cplex.getValue(x44));
				System.out.println("x45 ="+ cplex.getValue(x45));
				System.out.println("x46 ="+ cplex.getValue(x46));
				System.out.println("x51 ="+ cplex.getValue(x51));
				System.out.println("x52 ="+ cplex.getValue(x52));
				System.out.println("x53 ="+ cplex.getValue(x53));
				System.out.println("x54 ="+ cplex.getValue(x54));
				System.out.println("x55 ="+ cplex.getValue(x55));
				System.out.println("x56 ="+ cplex.getValue(x56));
				System.out.println("x61 ="+ cplex.getValue(x61));
				System.out.println("x62 ="+ cplex.getValue(x62));
				System.out.println("x63 ="+ cplex.getValue(x63));
				System.out.println("x64 ="+ cplex.getValue(x64));
				System.out.println("x65 ="+ cplex.getValue(x65));
				System.out.println("x66 ="+ cplex.getValue(x66));
				
			}
			else {
				System.out.println("Model non résolu");
			}
		}	
		catch (IloException exc) {
			exc.printStackTrace();
		}
	}

}
